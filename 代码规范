## 文件存放规范
    -- 【强制】临时文件 需要以 “_” 开头，否则都将视为需要长期存在的文件/文件夹

## 代码风格规范
    -- 【强制】不率先进行性能优化，优先保证可阅读性。对于可阅读性差不多的写法，建议使用性能更好的。
    -- 【强制】日志要区分log和error的区别，且要以 [组件名 | 功能名] 开头，以便于其他同事能阅读到日志用途，否则将视为临时日志，临时日志可随被时删除。
    -- 【建议】如果封装的功能规模可以形成一个框架（其他项目也可以直接使用），则需要将js、css等资源全部整合到一个文件夹里，并部署在plugins文件夹，这样可以便于其他项目的快速部署。同时建议开发一个html页面简要提供使用示例。
    -- 【建议】命名尽量用英文命名，避免拼音、中文等方式。

## HTML规范
    -- 【强制】列表内容必须以ul-li 或者ol-li等结构来写
    -- 【建议】html代码要尽可能简洁
    -- 【建议】列表内容尽量避免写重复性class，优先使用标签选择器，如果遇到性能问题，再进行优化

## CSS规范
    -- 【强制】修改浏览器默认样式的css需要写在basic.css里。
    -- 【强制】公共样式需要写在common.css里，禁止写在组件里。
    -- 【强制】单独封装功能模块样式需要新建一个css文件。
    -- 【强制】如果封装的功能规模可以形成一个框架（其他项目也可以直接使用）则需要写在plugins里。
    -- 【强制】单独针对某一组件的css样式必须写在对应组件里。
    -- 【强制】如果使用了浮动布局，则必须对应使用clear来清除浮动。
    -- 【建议】css选择器层级尽量不超过3层。
    -- 【建议】尽量使用transform来写平移等效果。

## JS规范
    -- 【强制】重复性的逻辑必须进行抽离，避免一样的逻辑复制多次，否则会给维护带来不必要的麻烦。
